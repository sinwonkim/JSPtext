JSP의 내부객체(implicit object)

별다른 선언 과정과 객체 생성없이 사용할 수 있는 객체 , 이러한 객체들은 JSP 컨테이너가 제공하며 이들을 JSP 내부객체라함

내부객체란?
JSP페이지를 작성할 떄 특별한 기능을 제공하는 JSP컨테이너가 제공하는 특별한 객체(변수)를 말함 
이러한 객체는 JSP문법 요소들과 함께 동작해 사용자의 요청을 적절히 처리하여 동적으로 HTML을 생성하게 됨 

"reqeest"라는 이름의 변수는 바로 이러한 내부 객체 중 하나로 사용자의 요청(request)에 대한 정보를 처리하기 위해 제공되어 짐 

내부 객체는 사용되는 범주에 따라 4가지 형태로 분류됨 
-JSP 페이지 입출력 관련 내부 객체
-JSP 페이지 외부 환경 정보 제공 내부 객체
-JSP 페이지 서블릿 관련 내부 객체 
-JSP 페이지 예외 관련 기본 객체 

String name = request.getParameter("name");
//name이라는 파라미터의 값을 구하는 getParameter()메소드는 request(특정한 객체명)으로 호출을 하였다.

메소드 사용방법 
자바의 객체는 변수와 메소드로  이루어져 있다. 이러한 변수와 메소드를 사용하기 위해서는 먼저 객체를 생성하고 
특정한 변수(참조 변수)를 통해서 객체에 접근할 수 가 있다.

public class A{

  private String msg ="Good Luck!";

  public String message() {
    return msg;
  }
  
  public static void main(String args[]){
   A a = new A();
   System.out.println(a.message());
  }
}
위 예제와 같이 특정한 일을 수행하는 기능(메소드,함수)을 사용하기 위해서는 직접 프로그래밍 하여 객체를 생성하고, 생성된 객체를 통해 
처리해야 한다는 사실 but 내부 객체란 이렇게 프로그래밍하고 생성하여 사용하는 것이 아니라 이미 컨테이너에 의해 제공되는 객체라는 사실 

자바에서
클래스명- 대문자
메소드,변수-소문자 

JSP 페이지의 내부객체
request      : 파라미터를 포함한 요청을 담고 있는 객체
response     : 요청에 대한 응답을 담고 있는 객체
out  : 페이지 내용을 담고 있는 출력 스트림 객체
session  :세션 정보를 담고 있는 객체
application : 어플리케이션 Context의 모든 페이지가 공유할 데이터를 담고 있는 객체
pageContext : 페이지 실행에 필요한 Context 정보를 담고 있는 객체
page : JSP 페이지의 서블릿 객체
config : JSP 페이지의 서블릿 설정 데이터 초기화 정보 객체
exception : JSP 페이지의 서블릿 실행 시 처리하지 못한 예외 객체

선언문에서는 내부 객체를 사용할 수 x  Why?  내부 객체는 JSP 페이지가 서블릿으로 변환이 된 소스에서 _jspService()메소드 안에 선언이 되므로 
class 안에서 선언이 되는 선언문에서는 내부 객체를 참조할 수 x


reqeust,session,application,pageContext 내부 객체는 임의 속성 값(attribtue)을 저장 하고 읽을 수 있는 메소드를 제공하고 있다.
속성 값을 저장하고 읽을 수 있는 기능은 JSP 페이지들 또는 서블릿 간에 정보를 주고 받을 수 있도록 해줌 

내부 객체의 속성을 저장하고 읽어내는 공통 메소드 
getAttribute(Key,Value)   : 주어진 Key(이름 등)에 속성값을 연결함
getAttributeNames()  : 모든 속성의 이름을 얻어냄
getAttribute(Key)    : 주어진 key에 연결된 속성값을 얻어냄
removeAttribute(key)  : 주어진 key에 연결된 속성값을 제거함

메소드의 파라미터 값으로 value는 Object 타입이므로 객체의 모든 타입을 저장할 수 있으며 Key는 String 타입의 객체 형태를 가지고 있는다.

reqeust,response,out 내부 객체는 JSP 페이지 입출력과 관련한 내부 객체에 해당함 
클라이언트로부터 JSP 페이지의 호출에 의해서 전달되는 데이터의 요청과 응답 그리고 출력의 역할을 담당하는 내부 객체들이다.

request 
request 객체는 브라우저에서 JSP 페이지로 전달되는 데이터의 묶음으로 HTTP 헤더와 HTTP 바디로 구성되어 있다.
JSP 컨테이너는 요청된 HTTP 메시지를 통해 HttpServletRequest 객체 타입의 request 객체 명으로 사용함 
request 객체의 요청 메소드를 정리한 것 

메소드 
String getParameter("name")   : name에 할당된 값을 반환하며 지정된 파라미터 값이 없으면 null 값을 반환함
String[] getParameterValues(name)   : name의 모든 값을 String 배열로 반환함
Enumeration getParameterNames()   : 요청에 사용된 모든 파라미터 이름을 java.util.Enumeration 타입으로 반환함

이렇게 여러가지 요청에 대한 정보를 제공하는 메소드를 제공함으로써 프로그래머는 자신이 처한상황에 따라 메소드를 사용하여
폼 태그로부터 넘어오는 요청정보를 분석할 수 있게 됨 
ex)
폼 태그로부터 넘어온 파라미터의 이름을 모두 알고 싶은 경우에는 getParameterNames() 메소드를 사용하면 되고 또한 폼 태그에서
체크박스와 같은 파라미터의 이름은 같지만 서로 다른 값들이 선택되어져 넘어오는 경우에는 String 타입의 배열로 값을 받을 수 있도록
getParameterValues(name) 등의 메소드가 제공되어 짐 
일반적으로 가장 많이 사용하는 메소드는 getParameter("name")이다.


